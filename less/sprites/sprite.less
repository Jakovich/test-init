/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@-contact-name: 'Contact';
@-contact-x: 45px;
@-contact-y: 26px;
@-contact-offset-x: -45px;
@-contact-offset-y: -26px;
@-contact-width: 11px;
@-contact-height: 11px;
@-contact-total-width: 70px;
@-contact-total-height: 68px;
@-contact-image: 'sprite.png';
@-contact: 45px 26px -45px -26px 11px 11px 70px 68px 'sprite.png' 'Contact';
@-panier-name: 'Panier';
@-panier-x: 0px;
@-panier-y: 0px;
@-panier-offset-x: 0px;
@-panier-offset-y: 0px;
@-panier-width: 29px;
@-panier-height: 26px;
@-panier-total-width: 70px;
@-panier-total-height: 68px;
@-panier-image: 'sprite.png';
@-panier: 0px 0px 0px 0px 29px 26px 70px 68px 'sprite.png' 'Panier';
@-profil-name: 'Profil';
@-profil-x: 0px;
@-profil-y: 26px;
@-profil-offset-x: 0px;
@-profil-offset-y: -26px;
@-profil-width: 19px;
@-profil-height: 25px;
@-profil-total-width: 70px;
@-profil-total-height: 68px;
@-profil-image: 'sprite.png';
@-profil: 0px 26px 0px -26px 19px 25px 70px 68px 'sprite.png' 'Profil';
@-recherche-name: 'Recherche';
@-recherche-x: 0px;
@-recherche-y: 51px;
@-recherche-offset-x: 0px;
@-recherche-offset-y: -51px;
@-recherche-width: 17px;
@-recherche-height: 17px;
@-recherche-total-width: 70px;
@-recherche-total-height: 68px;
@-recherche-image: 'sprite.png';
@-recherche: 0px 51px 0px -51px 17px 17px 70px 68px 'sprite.png' 'Recherche';
@arrow-name: 'arrow';
@arrow-x: 19px;
@arrow-y: 26px;
@arrow-offset-x: -19px;
@arrow-offset-y: -26px;
@arrow-width: 26px;
@arrow-height: 16px;
@arrow-total-width: 70px;
@arrow-total-height: 68px;
@arrow-image: 'sprite.png';
@arrow: 19px 26px -19px -26px 26px 16px 70px 68px 'sprite.png' 'arrow';
@number-name: 'number';
@number-x: 29px;
@number-y: 0px;
@number-offset-x: -29px;
@number-offset-y: 0px;
@number-width: 41px;
@number-height: 18px;
@number-total-width: 70px;
@number-total-height: 68px;
@number-image: 'sprite.png';
@number: 29px 0px -29px 0px 41px 18px 70px 68px 'sprite.png' 'number';
@spritesheet-width: 70px;
@spritesheet-height: 68px;
@spritesheet-image: 'sprite.png';
@spritesheet-sprites: @-contact @-panier @-profil @-recherche @arrow @number;
@spritesheet: 70px 68px 'sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
